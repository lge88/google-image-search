#! /usr/bin/env node
var assign = require('object-assign');
var sim = require(__dirname + '/../fetch-image');
var minimist = require('minimist');
var argv = minimist(process.argv.slice(2));
var config = parseArgv(argv);

if (config === null) {
  printHelpAndExit();
} else {
  run(config);
}

function defaultConfig() {
  return {
    numGoogleResults: 100,
    numImages: 100,
    destDirectory: 'output',
    prefix: '',
    verbose: false
  };
}

function parseArgv(argv) {
  var defConfig = defaultConfig();
  var config = {};
  if (argv._.length <= 0) return null;

  config.keyword = argv._[0];

  config.destDirectory = argv.d || argv['directory'];
  config.prefix = argv.p || argv['prefix'];
  if (!config.prefix) delete config.prefix;

  config.numGoogleResults = parseInt(argv['num-google-results']);
  if (isNaN(config.numGoogleResults)) delete config.numGoogleResults;

  config.numImages = parseInt(argv.n || argv['num-images']);
  if (isNaN(config.numImages)) delete config.numImages;

  config = assign(defConfig, config);
  return config;
}


function noop() {}

function run(config) {
  var searchUrlStream = sim.imageSearchUrlStream(config.keyword, config.numGoogleResults);
  var siteUrlStream = sim.siteLinkStream(searchUrlStream);
  var imageUrlStream = sim.imageLinkStream(siteUrlStream, config.keyword);

  imageUrlStream = imageUrlStream
    .errors(noop)
    .take(config.numImages);

  if (config.destDirectory) {
    imageUrlStream.map(sim.downloadImagesTo(config.destDirectory, config.prefix))
    .each(function(obj) {
      console.log('\'' + obj.url + '\' \'' + obj.dest + '\'');
    });
  } else {
    imageUrlStream.each(function(url) {
      console.log(url);
    });
  }
}

function printHelpAndExit() {
  console.log('Fetch images from web.');
  console.log('Usage: fim <keyword> [options]');
  console.log('  -d, --directory             output directory, default is \'\'. If empty, ' +
              'ouput image links instead of download.');
  console.log('  -n, --num-images            number of images to download, default is 100.');
  console.log('  -p, --prefix                file prefix, default is \'\'');
  console.log('  --num-google-results        number of google search image results to start' +
              ', default is 100.');

  process.exit();
}
